plugins {
	id 'java-library'
	id 'maven-publish'
	id 'com.github.hierynomus.license' version '0.16.1'
	id 'com.gradleup.shadow' version '8.3.0'
}

defaultTasks 'clean', 'license', 'build', 'publishToMavenLocal'

repositories {
	mavenLocal()
	// Bukkit / Spigot API
	maven {
		url 'https://hub.spigotmc.org/nexus/content/groups/public/'
	}
	// ProtocolLib
	maven {
		url 'https://repo.dmulloy2.net/nexus/repository/public/'
	}
	// bStats
	maven {
		url 'https://repo.codemc.org/repository/maven-public'
	}
	mavenCentral()
}

configurations {
	shade
	compileClasspath.extendsFrom shade
	implementation {
		// There are plans to remove this library from Bukkit:
		exclude group: 'commons-lang', module: 'commons-lang'
	}
}

dependencies {
	compileOnly 'org.spigotmc:spigot-api:1.20.1-R0.1-SNAPSHOT'
	compileOnly 'com.comphenix.protocol:ProtocolLib:5.0.0'
	shade 'org.bstats:bstats-bukkit:2.2.1'
}

java {
	sourceCompatibility = JavaVersion.VERSION_17
}

processResources {
	from file('LICENSE.txt')
	from sourceSets.main.resources.srcDirs
	// TODO Some plugins might add resource directories twice.
	// See https://github.com/gradle/gradle/issues/17236
	duplicatesStrategy = DuplicatesStrategy.EXCLUDE

	filesMatching('plugin.yml') {
		expand([
			'version': project.version,
			'description': project.description,
			'url': project.url
		])
	}
}

jar {
	// We only require the output of the shadowJar task.
	enabled false
}

// License header
license {
	header file('HEADER.txt')
	include '**/*.java'
	exclude '**/thirdparty/**'

	ignoreFailures true
	strictCheck true
}

configure([compileJava, compileTestJava]) {
	options.encoding = 'UTF-8'
}

shadowJar {
	configurations = [project.configurations.shade]
	archiveClassifier = ''
	relocate 'org.bstats', "${project.group}.metrics.bstats"

	// Include the generated Maven metadata:
	into("META-INF/maven/$project.group/$project.name") {
		from { generatePomFileForMavenJavaPublication } {
			rename '.*', 'pom.xml'
		}
	}
}

artifacts {
	archives shadowJar
}

publishing {
	publications {
		mavenJava(MavenPublication) { publication ->
			project.shadow.component(publication)
		}
	}
}
